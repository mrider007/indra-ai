services:
  redis:
    image: public.ecr.aws/docker/library/redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  api:
    build: ./model-serving
    environment:
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DEBUG=${DEBUG}
      - ENVIRONMENT=${ENVIRONMENT}
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./model-serving:/app
    depends_on:
      - redis
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload

  training:
    build: ./model-training            # <â€” fixed
    depends_on:
      - redis
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MODEL_NAME=${MODEL_NAME:-microsoft/DialoGPT-small}
      - BATCH_SIZE=${BATCH_SIZE:-2}
      - LEARNING_RATE=${LEARNING_RATE:-5e-5}
      - TRAINING_EPOCHS=${TRAINING_EPOCHS:-3}
      - RUN_AS_WORKER=${RUN_AS_WORKER:-false}
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./config:/app/config

  data-collection:
    build: ./data-collection
    environment:
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - RUN_AS_WORKER=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./data-collection:/app
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning

volumes:
  redis_dev_data: